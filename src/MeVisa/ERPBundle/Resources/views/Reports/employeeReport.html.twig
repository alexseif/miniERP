{% extends 'base.html.twig' %}
{% block title %}Report for Employees updates{% endblock %}
{% block stylesheets %}
  {{ parent() }}

{% endblock %}
{% block wrapper %}
  <div class="container-fluid">
    <a class="btn btn-default ml-5" href="{{ path('reports') }}"><span class="glyphicon glyphicon-arrow-left"></span></a>
    Updates by Employee <strong>{{ month or year ? "for" }} {{ month? month }} {{ year? year}} </strong>
    <hr/>
    <div id="error_div"></div>
    <div id="dashboard_div">
      <div class="row">
        <div class="col-md-4">
          <div class="clearfix">
            <div class="dropdown pull-left">
              <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Filter By User <span class="caret"></span>
              </button>
              <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                <li><a href="{{ path('reports_employees') }}">All</a></li>
                  {% for user in users %}
                  <li><a href="{{ path('reports_employees', {username: user.username}) }}">{{ user.username }}</a></li>
                  {% endfor %}
              </ul>
            </div>
            <div class="dropdown pull-left">
              <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Filter By Month <span class="caret"></span>
              </button>
              <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                <li><a href="{{ path('reports_employees') }}">All</a></li>
                  {% for report in reports %}
                  <li><a href="{{ path('reports_employees', {username: 'null', month: report.gBMonth, year:report.gBYear}) }}">{{ report.gBMonth }} {{ report.gBYear }}</a></li>
                  {% endfor %}
              </ul>
            </div>
          </div>
          <div id="filter_div"></div>
          <div id="table_div"></div>
        </div>
        <div id="chart_div" style="min-height: 500px;" class="col-md-8"></div>
      </div>
    </div>
    <div id="timeline_div" style="width: 100%; height: 500px">

    </div>
    {#        {{ dump(users)}}#}
  </div>
{% endblock %}
{% block javascripts %}
  {{ parent() }}
  <!--Load the AJAX API-->
  {#    <script type="text/javascript" src="https://www.google.com/jsapi"></script>#}
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', {'packages': ['controls', 'corechart', 'table']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawDashboard);
    google.charts.setOnLoadCallback(drawChart);

    var data;
    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawDashboard() {

      // Create the data table.
      data = new google.visualization.DataTable();
      data.addColumn('string', 'User');
      data.addColumn('number', 'Order Updates');
      data.addRows([{% for ul in userLog %}
        ['{{ ul.username }}',{{ul.cUpdates}} ],{% endfor %}
      ]);

      data.sort([{column: 1, desc: true}]);

      // Create a dashboard.
      var dashboard = new google.visualization.Dashboard(
              document.getElementById('dashboard_div'));


      // Create a range slider, passing some options
      var donutRangeSlider = new google.visualization.ControlWrapper({
        controlType: 'CategoryFilter',
        containerId: 'filter_div',
        "options": {"filterColumnIndex": 0}
      });
      // Create a pie chart, passing some options
      var pieChart = new google.visualization.ChartWrapper({
        'chartType': 'PieChart',
        'containerId': 'chart_div',
        'options': {
          'legend': 'left',
          is3D: true,
        },
        views: [0, 1]
      });

      // Create a pie chart, passing some options
      var tableChart = new google.visualization.ChartWrapper({
        'chartType': 'Table',
        'containerId': 'table_div',
        'options': {
          title: 'Revenue by product',
        },
      });

      dashboard.bind(donutRangeSlider, [pieChart, tableChart])

      // Draw the dashboard.
      dashboard.draw(data);

    }

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('date', 'Date');
    {% for u in users %}
        data.addColumn('number', '{{u.username}}');
    {% endfor %}
        data.addRows([{% for l in logs %}
          [
            new Date({{l.loggedAt|date('Y')}}, {{l.loggedAt|date('m')}},  {{l.loggedAt|date('d')}} ),
    {% for u in users %}
      {{(l.username == u.username)? l.cUpdates }},
    {% endfor %}
          ],{% endfor %}
        ]);
        // Set chart options
        var options = {
          chart: {
            title: 'User Updates',
            subtitle: 'based on number of updates per day'
          },
          hAxis: {title: 'Date'},
          vAxis: {title: 'Number of updates'}
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.ScatterChart(document.getElementById('timeline_div'));
        chart.draw(data, options);
      }
  </script>
{% endblock %}